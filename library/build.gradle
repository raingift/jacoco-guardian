import org.jetbrains.kotlin.gradle.dsl.JvmTarget

plugins {
    id 'java-library'
    id 'maven-publish'
    alias(libs.plugins.jetbrains.kotlin.jvm)
}

java {
    sourceCompatibility JavaVersion.VERSION_11
    targetCompatibility JavaVersion.VERSION_11
}

kotlin {
    compilerOptions {
        jvmTarget = JvmTarget.JVM_11
    }
}

group = GROUP
version = VERSION

publishing {
    repositories {
        mavenLocal()
    }

    publications {
        mavenAar(MavenPublication) {
            groupId = project.group
            artifactId = "jacoco-guard-lib"
            version = project.version
            from components.java

            pom.withXml {
                asNode().with {
                    appendNode("name", project.name)
                    appendNode("url", "https://github.com/raingift/services.git")
                    appendNode("description", project.description ?: project.name)

                    // 配置 SCM 节点
                    appendNode("scm").with {
                        appendNode("connection", "scm:git:git@github.com:raingift/services.git")
                        appendNode("developerConnection", "scm:git:git@github.com:raingift/services.git")
                        appendNode("url", "https://github.com/raingift/services.git")
                    }

                    // 配置 Licenses 节点
                    appendNode("licenses").with {
                        appendNode("license").with {
                            appendNode("name", "Apache License")
                            appendNode("url", "https://www.apache.org/licenses/LICENSE-2.0")
                        }
                    }

                    // 配置 Developers 节点
                    appendNode("developers").with {
                        appendNode("developer").with {
                            appendNode("id", "raingift")
                            appendNode("name", "raingift")
                            appendNode("email", "raingift2692@163.com")
                        }
                    }
                }
            }
        }
    }
}
